        -:    0:Source:tcas0.c
        -:    0:Graph:tcas0.gcno
        -:    0:Data:tcas0.gcda
        -:    0:Runs:3217
        -:    1:#include <stdio.h>
        -:    2:
        -:    3:#define OLEV 600       /* in feets/minute */
        -:    4:#define MAXALTDIFF 600 /* max altitude difference in feet */
        -:    5:#define MINSEP 300     /* min separation in feet */
        -:    6:#define NOZCROSS 100   /* in feet */
        -:    7:/* variables */
        -:    8:
        -:    9:typedef int bool;
        -:   10:
        -:   11:int Cur_Vertical_Sep;
        -:   12:bool High_Confidence;
        -:   13:bool Two_of_Three_Reports_Valid;
        -:   14:
        -:   15:int Own_Tracked_Alt;
        -:   16:int Own_Tracked_Alt_Rate;
        -:   17:int Other_Tracked_Alt;
        -:   18:
        -:   19:int Alt_Layer_Value; /* 0, 1, 2, 3 */
        -:   20:int Positive_RA_Alt_Thresh[4];
        -:   21:
        -:   22:int Up_Separation;
        -:   23:int Down_Separation;
        -:   24:
        -:   25:/* state variables */
        -:   26:int Other_RAC; /* NO_INTENT, DO_NOT_CLIMB, DO_NOT_DESCEND */
        -:   27:#define NO_INTENT 0
        -:   28:#define DO_NOT_CLIMB 1
        -:   29:#define DO_NOT_DESCEND 2
        -:   30:
        -:   31:int Other_Capability; /* TCAS_TA, OTHER */
        -:   32:#define TCAS_TA 1
        -:   33:#define OTHER 2
        -:   34:
        -:   35:int Climb_Inhibit; /* true/false */
        -:   36:
        -:   37:#define UNRESOLVED 0
        -:   38:#define UPWARD_RA 1
        -:   39:#define DOWNWARD_RA 2
        -:   40:
     3154:   41:void initialize()
        -:   42:{
     3154:   43:    Positive_RA_Alt_Thresh[0] = 400;
     3154:   44:    Positive_RA_Alt_Thresh[1] = 500;
     3154:   45:    Positive_RA_Alt_Thresh[2] = 640;
     3154:   46:    Positive_RA_Alt_Thresh[3] = 740;
     3154:   47:}
        -:   48:
     2252:   49:int ALIM()
        -:   50:{
     2252:   51:    return Positive_RA_Alt_Thresh[Alt_Layer_Value];
        -:   52:}
        -:   53:
     3540:   54:int Inhibit_Biased_Climb()
        -:   55:{
     3540:   56:    return (Climb_Inhibit ? Up_Separation + NOZCROSS : Up_Separation);
        -:   57:}
        -:   58:
     1770:   59:bool Non_Crossing_Biased_Climb()
        -:   60:{
        -:   61:    int upward_preferred;
        -:   62:    int upward_crossing_situation;
        -:   63:    bool result;
        -:   64:
        -:   65:    // upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
     1770:   66:    if (Inhibit_Biased_Climb() > Down_Separation)
      955:   67:        upward_preferred = 1;
        -:   68:    else
      815:   69:        upward_preferred = 0;
        -:   70:
     1770:   71:    if (upward_preferred)
        -:   72:    {
      955:   73:        result = !(Own_Below_Threat()) || ((Own_Below_Threat()) && (!(Down_Separation >= ALIM())));
        -:   74:    }
        -:   75:    else
        -:   76:    {
      815:   77:        result = Own_Above_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Up_Separation >= ALIM());
        -:   78:    }
     1770:   79:    return result;
        -:   80:}
        -:   81:
     1770:   82:bool Non_Crossing_Biased_Descend()
        -:   83:{
        -:   84:    int upward_preferred;
        -:   85:    int upward_crossing_situation;
        -:   86:    bool result;
        -:   87:
     1770:   88:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
     1770:   89:    if (upward_preferred)
        -:   90:    {
      955:   91:        result = Own_Below_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Down_Separation >= ALIM());
        -:   92:    }
        -:   93:    else
        -:   94:    {
      815:   95:        result = !(Own_Above_Threat()) || ((Own_Above_Threat()) && (Up_Separation >= ALIM()));
        -:   96:    }
     1770:   97:    return result;
        -:   98:}
        -:   99:
     3401:  100:bool Own_Below_Threat()
        -:  101:{
     3401:  102:    return (Own_Tracked_Alt < Other_Tracked_Alt);
        -:  103:}
        -:  104:
     3038:  105:bool Own_Above_Threat()
        -:  106:{
     3038:  107:    return (Other_Tracked_Alt < Own_Tracked_Alt);
        -:  108:}
        -:  109:
     3154:  110:int alt_sep_test()
        -:  111:{
        -:  112:    bool enabled, tcas_equipped, intent_not_known;
        -:  113:    bool need_upward_RA, need_downward_RA;
        -:  114:    int alt_sep;
        -:  115:
     3154:  116:    enabled = High_Confidence && (Own_Tracked_Alt_Rate <= OLEV) && (Cur_Vertical_Sep > MAXALTDIFF);
     3154:  117:    tcas_equipped = Other_Capability == TCAS_TA;
     3154:  118:    intent_not_known = Two_of_Three_Reports_Valid && Other_RAC == NO_INTENT;
        -:  119:
     3154:  120:    alt_sep = UNRESOLVED;
        -:  121:
     3154:  122:    if (enabled && ((tcas_equipped && intent_not_known) || !tcas_equipped))
        -:  123:    {
     1770:  124:        need_upward_RA = Non_Crossing_Biased_Climb() && Own_Below_Threat();
     1770:  125:        need_downward_RA = Non_Crossing_Biased_Descend() && Own_Above_Threat();
     1770:  126:        if (need_upward_RA && need_downward_RA)
        -:  127:            /* unreachable: requires Own_Below_Threat and Own_Above_Threat
        -:  128:               to both be true - that requires Own_Tracked_Alt < Other_Tracked_Alt
        -:  129:               and Other_Tracked_Alt < Own_Tracked_Alt, which isn't possible */
    #####:  130:            alt_sep = UNRESOLVED;
     1770:  131:        else if (need_upward_RA)
      290:  132:            alt_sep = UPWARD_RA;
     1480:  133:        else if (need_downward_RA)
      246:  134:            alt_sep = DOWNWARD_RA;
        -:  135:        else
     1234:  136:            alt_sep = UNRESOLVED;
        -:  137:    }
        -:  138:
     3154:  139:    return alt_sep;
        -:  140:}
        -:  141:
     3217:  142:main(argc, argv) int argc;
        -:  143:char *argv[];
        -:  144:{
     3217:  145:    if (argc < 13)
        -:  146:    {
       63:  147:        fprintf(stdout, "Error: Command line arguments are\n");
       63:  148:        fprintf(stdout, "Cur_Vertical_Sep, High_Confidence, Two_of_Three_Reports_Valid\n");
       63:  149:        fprintf(stdout, "Own_Tracked_Alt, Own_Tracked_Alt_Rate, Other_Tracked_Alt\n");
       63:  150:        fprintf(stdout, "Alt_Layer_Value, Up_Separation, Down_Separation\n");
       63:  151:        fprintf(stdout, "Other_RAC, Other_Capability, Climb_Inhibit\n");
       63:  152:        exit(1);
        -:  153:    }
     3154:  154:    initialize();
     3154:  155:    Cur_Vertical_Sep = atoi(argv[1]);
     3154:  156:    High_Confidence = atoi(argv[2]);
     3154:  157:    Two_of_Three_Reports_Valid = atoi(argv[3]);
     3154:  158:    Own_Tracked_Alt = atoi(argv[4]);
     3154:  159:    Own_Tracked_Alt_Rate = atoi(argv[5]);
     3154:  160:    Other_Tracked_Alt = atoi(argv[6]);
     3154:  161:    Alt_Layer_Value = atoi(argv[7]);
     3154:  162:    Up_Separation = atoi(argv[8]);
     3154:  163:    Down_Separation = atoi(argv[9]);
     3154:  164:    Other_RAC = atoi(argv[10]);
     3154:  165:    Other_Capability = atoi(argv[11]);
     3154:  166:    Climb_Inhibit = atoi(argv[12]);
        -:  167:
     3154:  168:    fprintf(stdout, "%d\n", alt_sep_test());
     3154:  169:    exit(0);
        -:  170:}
